exit
File.extname('terminus.jpg')
File.extname
File::extname("terminus.jpg")
File::
::File
Rack::Mime.mime_type(::File.extname("public/terminus.jpg"))
file
Rack::Mime.mime_type(::File.extname(file))
Rack::Mime.mime_type(::File.extname("file"))
Rack::Mime.mime_type(::File.extname("file")
Rack::Mime.mime_type
Rack::Mime.mime_type(file)
Rack::Mime.methods.mime_type
Rack::Mime.methods
Rack::Mime
"terminus.jpg".extR
"terminus.jpg".ext
Mime
file.methods
file.type
file
exit
env
file
c
        file_name = env["PATH_INFO"][1..-1]
"/terminus.png/fdafdsa/fdafdsfasd".chomp('/')
env["PATH_INFO"].chomp('/'.freeze)
env["PATH_INFO"].chomp('/')
env["PATH_INFO"].chomp
env["PATH_INFO"]
env["REQUEST_METHOD"] == ("NNO" || "GET")
env["REQUEST_METHOD"] == "NNO" || "GET"
env["REQUEST_METHOD"] == "GET" || "HEAD"
env["REQUEST_METHOD"]
env["REQUEST_METHOD"].get?
env["REQUEST_METHOD
env["REQUEST_METHOD]
env["REQUEST_METHOD].get?
env.request
env
env["PATH_INFO"]
env.PATH_INFO
env.path
env
Rack::Utils.status_code(:)
Rack::Utils.status_code(:bad_request)
Rack::Utils.status_code(:not_found)
Rack::Utils.status_code(@exception)
Rack::Utils.status_code
@exception
@exception.status
@exception
Rack::Utils::HTTP_STATUS_CODES.fetch(404)
Rack::Utils::HTTP_STATUS_CODES.fetch(422)
Rack::Utils::HTTP_STATUS_CODES.fetch(42)
@exception.message.starts_with?("No such file or directory")
@exception.message
@exception.backtrace
@exception.methods
@exception.class
@exception
env
Rack::Utils::HTTP_STATUS_CODES.fetch(404)
Rack::Utils::HTTP_STATUS_CODES.fetch(404, Rack::Utils::HTTP_STATUS_CODES[500])
Rack::Utils::HTTP_STATUS_CODES.fetch(404, Rac::Utils::HTTP_STATUS_CODES[500])
Rack::Utils::HTTP_STATUS_CODES.fetch(404, RACK::Utils::HTTP_STATUS_CODES[500])
Rack::Utils::HTTP_STATUS_CODES
Rack::Utils
request
env
request.formats
content_type
request.path_info
status
c
@exception
exception
@app
env.status
env
@exception
c
flash
flash[:notice]
n
v
n
k
n
v
k
n
self
n
c
value['_mu_flashes']
flashes
c
n
s
flashes
c
@discard
flashes_to_keep
c
flashes_to_keep
@discard
c
value
c
req.cookies
c
