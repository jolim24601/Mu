quit
Rack::Utils.parse_query(res.headers["Set-Cookie"])
Rack::Utils.parse_query(res.headers["Set-Cookie"](
res.headers["Set-Cookie"]["_rails_lite_app"]
res.headers["Set-Cookie"]
res.headers
quit
@cookie
req.path
req.cookies.path
req.cookies["_rails_lite_app"]
req.cookies
quit
routes
routes.count
routes.map(&:pattern).map(&:class)
/^\/cats\/(?<cat_id>\d+)\/statuses$/ =~ "/cats/1"
routes
routes.map(&:pattern).select { |pattern| pattern =~ req.path }
routes.map(&:pattern).each { |pattern| puts pattern =~ req.path }
routes.map(&:pattern)
routes.pattern
req.path
route
routes
req
route
quit
res.body
res.status
res
quit
route
res.status
res
req.path
routes.map(&:pattern)
pattern
req.path
req
routes.find { |route| route.matches?(req) }
route.matches?(req)
req.path
routes
routs
req
route
c
controller
controller_class.new(req, res, [])
pattern
pattern.match(req.path).names
pattern.match(req.path).class
pattern.class
pattern
pattern.names
match_data[1]
match_data[0]
quit
req.cookies['_rails_lite_app']
quit
JSON.parse("{\"count\":1}")
req.cookies['_rails_lite_app']
quit
@cookie
{ 'count' => 1 }.to_json
cookie
"{ "count" => 1 }"
JSON.parse(cookie)
cookie = req.cookies['_rails_lite_app']
req.cookies['_rails_lite_app']
req.cookies
quit
self.class
self
self.session
session
quit
self
session
quit
self
app.inspect
env
app.env
app
env
req
quit
